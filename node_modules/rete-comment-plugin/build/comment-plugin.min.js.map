{"version":3,"file":"comment-plugin.min.js","sources":["../src/draggable.js","../src/comment.js","../src/utils.js","../src/frame-comment.js","../src/inline-comment.js","../src/manager.js","../src/index.js"],"sourcesContent":["export default class Draggable {\n\n    constructor(el, onStart = () => {}, onTranslate = () => {}, onDrag = () => {}) {\n        this.mouseStart = null;\n\n        this.el = el;\n        this.onStart = onStart;\n        this.onTranslate = onTranslate;\n        this.onDrag = onDrag;\n\n        this.initEvents(el);\n    }\n\n    initEvents(el) {\n        el.addEventListener('mousedown', this.down.bind(this));\n        window.addEventListener('mousemove', this.move.bind(this));\n        window.addEventListener('mouseup', this.up.bind(this));\n\n        el.addEventListener('touchstart', this.down.bind(this));\n        window.addEventListener('touchmove', this.move.bind(this), {\n            passive: false\n        });\n        window.addEventListener('touchend', this.up.bind(this));\n    }\n\n    getCoords(e) {\n        const props = e.touches ? e.touches[0] : e;\n\n        return [props.pageX, props.pageY];\n    }\n\n    down(e) {\n        e.stopPropagation();\n        this.mouseStart = this.getCoords(e);\n\n        this.onStart();\n    }\n\n    move(e) {\n        if (!this.mouseStart) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        let [x, y] = this.getCoords(e);\n        let delta = [x - this.mouseStart[0], y - this.mouseStart[1]];\n        let zoom = this.el.getBoundingClientRect().width / this.el.offsetWidth;\n\n        this.onTranslate(delta[0] / zoom, delta[1] / zoom);\n    }\n\n    up() {\n        if (this.mouseStart) {\n            this.onDrag();\n        }\n\n        this.mouseStart = null;\n    }\n}","import Draggable from './draggable';\n\nexport default class Comment {\n    constructor(text, editor) {\n        this.editor = editor;\n        this.text = text;\n        this.scale = 1;\n        this.x = 0;\n        this.y = 0;\n        this.dragPosition = [0, 0];\n        this.links = [];\n \n        this.el = document.createElement('div');\n        this.el.tabIndex = 1;\n        this.el.addEventListener('contextmenu', this.onClick.bind(this));\n        this.el.addEventListener('focus', this.onFocus.bind(this));\n        this.el.addEventListener('blur', this.onBlur.bind(this));\n    \n        new Draggable(this.el, () => this.onStart(), (dx, dy) => this.onTranslate(dx, dy));\n        this.update();\n    }\n\n    linkTo(ids) {\n        this.links = ids || [];\n    }\n\n    linkedTo(node) {\n        return this.links.includes(node.id);\n    }\n\n    k() {\n        return 1;\n    }\n\n    onClick(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        let newText = prompt('Comment', this.text);\n\n        if (newText) {\n            this.text = newText\n            this.update();\n        }\n    }\n\n    onFocus() {\n        this.scale = Math.max(1, 1 / this.k());\n        this.update();\n        this.editor.trigger('commentselected', this)\n    }\n\n    focused() {\n        return document.activeElement === this.el;\n    }\n\n    onBlur() {\n        this.scale = 1;\n        this.update()\n    }\n\n    blur() {\n        this.el.blur();\n    }\n\n    onStart() {\n        this.dragPosition = [this.x, this.y];\n    }\n\n    onTranslate (dx, dy) {\n        const [x, y] = this.dragPosition;\n\n        this.x = x + this.scale * dx;\n        this.y = y + this.scale * dy;\n        \n        this.update();\n    }\n\n    update() {\n        this.el.innerText = this.text;\n        this.el.style.transform = `translate(${this.x}px, ${this.y}px) scale(${this.scale})`;\n    }\n\n    toJSON() {\n        return {\n            text: this.text,\n            position: [ this.x, this.y ],\n            links: this.links\n        }\n    }\n}","const min = (arr) => arr.length === 0 ? 0 : Math.min(...arr);\nconst max = (arr) => arr.length === 0 ? 0 : Math.max(...arr);\n\nexport function intersectRect(r1, r2) {\n    return !(\n        r2.left > r1.right || \n        r2.right < r1.left || \n        r2.top > r1.bottom ||\n        r2.bottom < r1.top\n    );\n}\n\nexport function containsRect(r1, r2) {\n    return (\n        r2.left > r1.left && \n        r2.right < r1.right && \n        r2.top > r1.top &&\n        r2.bottom < r1.bottom\n    );\n}\n\nexport function nodesBBox(editor, nodes, margin) {\n    const left = min(nodes.map(node => node.position[0])) - margin;\n    const top = min(nodes.map(node => node.position[1])) - margin;\n    const right = max(nodes.map(node => node.position[0] + editor.view.nodes.get(node).el.clientWidth)) + 2 * margin;\n    const bottom = max(nodes.map(node => node.position[1] + editor.view.nodes.get(node).el.clientHeight)) + 2 * margin;\n    \n    return {\n        left,\n        right,\n        top,\n        bottom,\n        width: Math.abs(left - right),\n        height: Math.abs(top - bottom),\n        getCenter: () => {\n            return [\n                (left + right) / 2,\n                (top + bottom) / 2\n            ];\n        }\n    };\n}","import Comment from './comment';\nimport { containsRect } from './utils';\n\nexport default class FrameComment extends Comment {\n    constructor(text, editor) {\n        super(text, editor);\n        \n        this.width = 0;\n        this.height = 0;\n        this.links = [];\n        this.el.className = 'frame-comment';\n    }\n\n    linkedNodesView() {\n        return this.links\n            .map(id => this.editor.nodes.find(n => n.id === id))\n            .map(node => this.editor.view.nodes.get(node));\n    }\n\n    onStart() {\n        super.onStart();\n        this.linkedNodesView().map(nodeView => nodeView.onStart())\n    }\n\n    onTranslate(dx, dy) {\n        super.onTranslate(dx, dy);\n        this.linkedNodesView().map(nodeView => nodeView.onDrag(dx, dy))\n    }\n\n    isContains(node) {\n        const commRect = this.el.getBoundingClientRect();\n        const view = this.editor.view.nodes.get(node);\n    \n        return containsRect(commRect, view.el.getBoundingClientRect());\n    }\n\n    update() {\n        super.update();\n\n        this.el.style.width = this.width+'px';\n        this.el.style.height = this.height+'px';\n    }\n\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            type: 'frame',\n            width: this.width,\n            height: this.height\n        }\n    }\n}","import Comment from './comment';\nimport { intersectRect } from './utils';\n\nexport default class InlineComment extends Comment {\n    constructor(text, editor) {\n        super(text, editor);\n        \n        this.el.className = 'inline-comment';\n        this.el.addEventListener('mouseup', this.onDrag.bind(this));\n    }\n\n    onDrag() {\n        const intersection = this.getIntersectNode();\n\n        this.linkTo(intersection ? [intersection.node.id] : []);\n    }\n\n    getIntersectNode() {\n        const commRect = this.el.getBoundingClientRect();\n\n        return Array.from(this.editor.view.nodes)\n            .map(([node, view]) => {\n                return { node, rect: view.el.getBoundingClientRect() };\n            })\n            .find(({ rect }) => {\n                return intersectRect(commRect, rect);\n            });\n    }\n\n    offset(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n        this.update();\n    } \n\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            type: 'inline'\n        }\n    }\n}","import FrameComment from './frame-comment';\nimport InlineComment from './inline-comment';\n\nexport default class CommentManager {\n    constructor(editor) {\n        this.editor = editor;\n        this.comments = [];\n\n        editor.on('zoomed', () => {\n            this.comments.map(c => c.blur.call(c));\n        });\n    }\n\n    addInlineComment(text, [ x, y ], links = []) {\n        let comment = new InlineComment(text, this.editor);\n\n        comment.k = () => this.editor.view.area.transform.k;\n        comment.x = x;\n        comment.y = y;\n        comment.linkTo(links);\n\n        this.addComment(comment);\n    }\n\n    addFrameComment(text, [ x, y ], links = [], width = 0, height = 0) {\n        let comment = new FrameComment(text, this.editor);\n\n        comment.x = x;\n        comment.y = y;\n        comment.width = width;\n        comment.height = height;\n        comment.linkTo(links);\n        \n        this.addComment(comment);\n    }\n\n    addComment(comment) {\n        comment.update();\n        this.comments.push(comment);\n\n        this.editor.view.area.appendChild(comment.el);\n        this.editor.trigger('commentcreated', comment);\n    }\n\n    deleteComment(comment) {\n        this.editor.view.area.removeChild(comment.el);\n        this.comments.splice(this.comments.indexOf(comment), 1);\n\n        this.editor.trigger('commentremoved', comment);\n    }\n\n    deleteFocusedComment() {\n        const focused = this.comments.find(c => c.focused());\n        \n        if (focused)\n            this.deleteComment(focused)\n    }\n\n    toJSON() {\n        return this.comments.map(c => c.toJSON())\n    }\n\n    fromJSON(list) {\n        [...this.comments].map(c => this.deleteComment(c));\n        list.map(item => {\n            if (item.type === 'frame') {\n                this.addFrameComment(item.text, item.position, item.links, item.width, item.height)\n            } else {\n                this.addInlineComment(item.text, item.position, item.links);\n            }\n        });\n    }\n}","import './style.sass';\nimport CommentManager from './manager';\nimport FrameComment from './frame-comment';\nimport InlineComment from './inline-comment';\nimport { nodesBBox } from './utils';\n\nfunction install(editor, { margin = 30 }) {\n    editor.bind('commentselected');\n    editor.bind('commentcreated');\n    editor.bind('commentremoved');\n\n    const manager = new CommentManager(editor);\n\n    window.addEventListener('keydown', function handleKey(e) {\n\n        if (e.code === 'KeyF' && e.shiftKey) {\n            const ids = editor.selected.list.map(node => node.id);\n            const nodes = ids.map(id => editor.nodes.find(n => n.id === id));\n            const { left, top, width, height } = nodesBBox(editor, nodes, margin);\n\n            manager.addFrameComment('...', [ left, top ], ids, width, height);\n        } else if (e.code === 'KeyC' && e.shiftKey) {\n            const position = Object.values(editor.view.area.mouse);\n\n            manager.addInlineComment('...', position);\n        } else if (e.code === 'Delete') {\n            manager.deleteFocusedComment();\n        }\n    });\n\n    editor.on('nodetranslated', ({ node, prev }) => {\n        const dx = node.position[0] - prev[0];\n        const dy = node.position[1] - prev[1];\n\n        manager.comments\n            .filter(comment => comment instanceof InlineComment)\n            .filter(comment => comment.linkedTo(node))\n            .map(comment => comment.offset(dx, dy));\n    });\n\n    editor.on('nodedraged', node => {\n        manager.comments\n            .filter(comment => comment instanceof FrameComment)\n            .filter(comment => {\n                const contains = comment.isContains(node);\n                const links = comment.links.filter(id => id !== node.id);\n\n                comment.links = contains ? [...links, node.id] : links;\n            });\n    });\n\n    editor.on('commentselected', () => {\n        const list = [...editor.selected.list];\n\n        editor.selected.clear();\n        list.map(node => node.update ? node.update() : null);\n    })\n\n    editor.on('export', data => {\n        data.comments = manager.toJSON();\n    });\n\n    editor.on('import', data => {\n        manager.fromJSON(data.comments || []);\n    });\n}\n\nexport default {\n    install\n}"],"names":["Draggable","el","onStart","onTranslate","onDrag","mouseStart","initEvents","addEventListener","this","down","bind","move","up","e","props","touches","pageX","pageY","stopPropagation","getCoords","preventDefault","x","y","delta","zoom","getBoundingClientRect","width","offsetWidth","Comment","text","editor","scale","dragPosition","links","document","createElement","tabIndex","onClick","onFocus","onBlur","_this","dx","dy","update","ids","node","includes","id","newText","prompt","Math","max","k","trigger","activeElement","blur","innerText","style","transform","min","arr","length","FrameComment","height","className","map","_this2","nodes","find","n","view","get","linkedNodesView","nodeView","r1","r2","commRect","left","right","top","bottom","InlineComment","intersection","getIntersectNode","linkTo","Array","from","rect","CommentManager","comments","on","c","call","comment","area","addComment","push","appendChild","removeChild","splice","indexOf","focused","deleteComment","toJSON","list","_this3","item","type","addFrameComment","position","addInlineComment","margin","manager","code","shiftKey","selected","clientWidth","clientHeight","abs","Object","values","mouse","deleteFocusedComment","prev","filter","linkedTo","offset","contains","isContains","clear","fromJSON","data"],"mappings":"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"}