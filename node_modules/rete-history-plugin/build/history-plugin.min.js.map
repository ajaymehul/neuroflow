{"version":3,"file":"history-plugin.min.js","sources":["../src/history.js","../src/action.js","../src/actions/node.js","../src/actions/connection.js","../src/index.js"],"sourcesContent":["export default class History {\n    constructor() {\n        this.active = false;\n        this.produced = [];\n        this.reserved = [];\n    }\n\n    add(action) {\n        if(this.active) return;\n        this.produced.push(action);\n        this.reserved = [];\n    }\n\n    _do(from, to, type) {\n        const action = from.pop();\n        if(!action) return;\n\n        this.active = true;\n        action[type]();\n        to.push(action);\n        this.active = false;\n    }\n\n    undo() {\n        this._do(this.produced, this.reserved, 'undo');\n    }\n\n    redo() {\n        this._do(this.reserved, this.produced, 'redo');\n    }\n}","export default class Action {\n    undo() {}\n    redo() {}\n}","import Action from '../action';\n\nexport class AddNodeAction extends Action {\n    constructor(editor, node) {\n        super();\n        this.editor = editor;\n        this.node = node;\n    }\n    undo() {\n        this.editor.removeNode(this.node);\n    }\n    redo() {\n        this.editor.addNode(this.node);\n    }\n}\n\nexport class RemoveNodeAction extends Action {\n    constructor(editor, node) {\n        super();\n        this.editor = editor;\n        this.node = node;\n    }\n    undo() {\n        this.editor.addNode(this.node);\n    }\n    redo() {\n        this.editor.removeNode(this.node);\n    }\n}","import Action from '../action';\n\nfunction reassign(connection) {\n    const { input, output } = connection;\n\n    return output.connections.find(c => c.input === input);\n}\n\nexport class AddConnectionAction extends Action {\n    constructor(editor, connection) {\n        super();\n        this.editor = editor;\n        this.connection = connection;\n    }\n    undo() {\n        this.editor.removeConnection(this.connection);\n    }\n    redo() {\n        this.editor.connect(this.connection.output, this.connection.input);\n        this.connection = reassign(this.connection);\n    }\n}\n\nexport class RemoveConnectionAction extends Action {\n    constructor(editor, connection) {\n        super();\n        this.editor = editor;\n        this.connection = connection;\n    }\n    undo() {\n        this.editor.connect(output, input);\n        this.connection = reassign(this.connection);\n    }\n    redo() {\n        this.editor.removeConnection(this.connection);\n    }\n}\n","import History from './history';\nimport Action from './action';\nimport { AddNodeAction, RemoveNodeAction } from './actions/node';\nimport { AddConnectionAction, RemoveConnectionAction } from './actions/connection';\n\nfunction install(editor, { keyboard = true }) {\n    editor.bind('undo');\n    editor.bind('redo');\n    editor.bind('addhistory');\n\n    const history = new History();\n\n    editor.on('undo', () => history.undo());\n    editor.on('redo', () => history.redo());\n    editor.on('addhistory', action => history.add(action));\n\n    editor.on('nodecreated', node => history.add(new AddNodeAction(editor, node)));\n    editor.on('noderemoved', node => history.add(new RemoveNodeAction(editor, node)));\n    editor.on('connectioncreated', c => history.add(new AddConnectionAction(editor, c)));\n    editor.on('connectionremoved', c => history.add(new RemoveConnectionAction(editor, c)));\n\n    \n    if(keyboard) document.addEventListener('keydown', e => {\n        if(!e.ctrlKey) return;\n\n        switch(e.code) {\n            case 'KeyZ': editor.trigger('undo'); break;\n            case 'KeyY': editor.trigger('redo'); break;\n        }\n    });\n}\n\nexport default {\n    name: 'history',\n    install,\n    Action\n}"],"names":["History","active","produced","reserved","action","this","push","from","to","type","pop","_do","Action","AddNodeAction","editor","node","removeNode","addNode","RemoveNodeAction","reassign","connection","input","output","connections","find","c","AddConnectionAction","removeConnection","connect","RemoveConnectionAction","name","install","keyboard","bind","history","on","undo","redo","add","document","addEventListener","e","ctrlKey","code","trigger"],"mappings":";;;;;yxOAAqBA,yCAERC,QAAS,OACTC,SAAW,QACXC,SAAW,yCAGhBC,GACGC,KAAKJ,cACHC,SAASI,KAAKF,QACdD,SAAW,gCAGhBI,EAAMC,EAAIC,OACJL,EAASG,EAAKG,MAChBN,SAECH,QAAS,EACdG,EAAOK,KACPD,EAAGF,KAAKF,QACHH,QAAS,uCAITU,IAAIN,KAAKH,SAAUG,KAAKF,SAAU,4CAIlCQ,IAAIN,KAAKF,SAAUE,KAAKH,SAAU,iBC5B1BU,uHCERC,EAAb,uBACgBC,EAAQC,sDAEXD,OAASA,IACTC,KAAOA,eAJeH,0CAOtBE,OAAOE,WAAWX,KAAKU,0CAGvBD,OAAOG,QAAQZ,KAAKU,YAVjC,GAcaG,EAAb,uBACgBJ,EAAQC,sDAEXD,OAASA,IACTC,KAAOA,eAJkBH,0CAOzBE,OAAOG,QAAQZ,KAAKU,0CAGpBD,OAAOE,WAAWX,KAAKU,YAVpC,GCdA,SAASI,EAASC,OACNC,EAAkBD,EAAlBC,aAAkBD,EAAXE,OAEDC,YAAYC,KAAK,SAAAC,UAAKA,EAAEJ,QAAUA,QAGvCK,EAAb,uBACgBZ,EAAQM,sDAEXN,OAASA,IACTM,WAAaA,eAJeR,0CAO5BE,OAAOa,iBAAiBtB,KAAKe,gDAG7BN,OAAOc,QAAQvB,KAAKe,WAAWE,OAAQjB,KAAKe,WAAWC,YACvDD,WAAaD,EAASd,KAAKe,kBAXxC,GAeaS,EAAb,uBACgBf,EAAQM,sDAEXN,OAASA,IACTM,WAAaA,eAJkBR,0CAO/BE,OAAOc,QAAQN,OAAQD,YACvBD,WAAaD,EAASd,KAAKe,gDAG3BN,OAAOa,iBAAiBtB,KAAKe,kBAX1C,SCSe,CACXU,KAAM,UACNC,QA7BJ,SAAiBjB,aAAUkB,SAAAA,gBACvBlB,EAAOmB,KAAK,QACZnB,EAAOmB,KAAK,QACZnB,EAAOmB,KAAK,kBAENC,EAAU,IAAIlC,EAEpBc,EAAOqB,GAAG,OAAQ,kBAAMD,EAAQE,SAChCtB,EAAOqB,GAAG,OAAQ,kBAAMD,EAAQG,SAChCvB,EAAOqB,GAAG,aAAc,SAAA/B,UAAU8B,EAAQI,IAAIlC,KAE9CU,EAAOqB,GAAG,cAAe,SAAApB,UAAQmB,EAAQI,IAAI,IAAIzB,EAAcC,EAAQC,MACvED,EAAOqB,GAAG,cAAe,SAAApB,UAAQmB,EAAQI,IAAI,IAAIpB,EAAiBJ,EAAQC,MAC1ED,EAAOqB,GAAG,oBAAqB,SAAAV,UAAKS,EAAQI,IAAI,IAAIZ,EAAoBZ,EAAQW,MAChFX,EAAOqB,GAAG,oBAAqB,SAAAV,UAAKS,EAAQI,IAAI,IAAIT,EAAuBf,EAAQW,MAGhFO,GAAUO,SAASC,iBAAiB,UAAW,SAAAC,MAC1CA,EAAEC,eAECD,EAAEE,UACA,OAAQ7B,EAAO8B,QAAQ,kBACvB,OAAQ9B,EAAO8B,QAAQ,YAQpChC,OAAAA"}